package com.bmc.multithearding;

public class MultithreadedApplication {
	
	class SumTask extends Thread{
		
		public int sum(){
			int sum = 0;
			for(int i = 1;i<=10;i++){
				sum+=i;
				System.out.println("sum at a moment:"+sum);
				try {
					Thread.sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			return sum;
		}
		
		@Override
		public void run(){
			System.out.println("Final sum is :"+sum());
		}
	}
	
	
	public double product(){
		double product = 1;
		for(int i = 1;i<=10;i++){
			product*=i;
		}
		return product;
	}
	
	public double div(){
		double div = 1;
		for(int i = 1;i<=10;i++){
			div/=i;
		}
		return div;
	}
	
	public static void main(String[] args) {
		//1.Thread doesn't exist
		//2.Thread is born
		
		MultithreadedApplication application = new MultithreadedApplication();
		//3.register runnable target
		Thread worker1 = new Thread(application.new SumTask());
		//4. Runnable state
		worker1.start();
		//5.Thread is running
		
//		System.out.println("sum:"+.sum());
//		System.out.println("product:"+s.product());
//		System.out.println("div:"+s.div());
	}

}
