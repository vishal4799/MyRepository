CREATE TABLE flights (
  year           smallint,
  month          smallint,
  day            smallint,
  carrier        varchar(80) DISTKEY, 
  origin         char(3), 
  dest           char(3), 
  aircraft_code  char(3), 
  miles          int,
  departures     int,
  minutes        int,
  seats          int,
  passengers     int,
  freight_pounds int
);


COPY flights
FROM 's3://us-west-2-aws-training/awsu-spl/spl17-redshift/static/data/flights-usa'
CREDENTIALS 'aws_access_key_id=;aws_secret_access_key=' 
GZIP
DELIMITER ','
REMOVEQUOTES
region 'us-west-2';


SELECT COUNT(*) FROM flights;


SELECT * FROM flights  ORDER BY random() LIMIT 10;

SELECT carrier,SUM (departures) FROM flights GROUP BY carrier ORDER BY 2 DESC LIMIT 10;


CREATE TABLE aircraft (
  aircraft_code CHAR(3) SORTKEY,
  aircraft      VARCHAR(100)
);


COPY aircraft
FROM 's3://us-west-2-aws-training/awsu-spl/spl17-redshift/static/data/lookup_aircraft.csv'
CREDENTIALS 'aws_access_key_id=;aws_secret_access_key='
IGNOREHEADER 1
DELIMITER ','
REMOVEQUOTES
TRUNCATECOLUMNS
region 'us-west-2';

SELECT * FROM aircraft ORDER BY random() LIMIT 10;

SELECT aircraft, SUM(departures) AS trips FROM flights JOIN aircraft using (aircraft_code) GROUP BY aircraft ORDER BY trips DESC LIMIT 10;



EXPLAIN SELECT   aircraft,   SUM(departures) AS trips FROM flights JOIN aircraft using (aircraft_code) GROUP BY aircraft ORDER BY trips DESC LIMIT 10;


ANALYZE COMPRESSION flights;


CREATE TABLE airports (
  airport_code CHAR(3) SORTKEY,
  airport      varchar(100)
);


COPY airports
FROM 's3://us-west-2-aws-training/awsu-spl/spl17-redshift/static/data/lookup_airports.csv'
CREDENTIALS 'aws_access_key_id=;aws_secret_access_key='
IGNOREHEADER 1
DELIMITER ','
REMOVEQUOTES
TRUNCATECOLUMNS
region 'us-west-2';



CREATE TABLE vegas_flights
DISTKEY (origin)
SORTKEY (origin)
AS
SELECT flights.*, airport
FROM flights
JOIN airports ON origin = airport_code
WHERE dest = 'LAS';


SELECT
  airport,
  to_char(SUM(passengers), '999,999,999') as passengers
FROM vegas_flights
GROUP BY airport
ORDER BY SUM(passengers) desc
LIMIT 10;


SELECT
  owner AS node,
  diskno,
  used,
  capacity,
  used/capacity::numeric * 100 as percent_used 
FROM stv_partitions 
WHERE host = node
ORDER BY 1, 2;


SELECT
  name,
  count(*)
FROM stv_blocklist
JOIN (SELECT DISTINCT name, id as tbl from stv_tbl_perm) USING (tbl)
GROUP BY name;



